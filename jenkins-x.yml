buildPack: none
pipelineConfig:
  agent:
    image: maven
    label: jenkins-maven
  env:
  - name: _JAVA_OPTIONS
    value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true
      -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4
      -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx1024m
  pipelines:
    post: {}
    pullRequest:
      pipeline:
        options:
          containerOptions:
            env:
            - name: DOCKER_CONFIG
              value: /home/jenkins/.docker/
            - name: DOCKER_REGISTRY
              valueFrom:
                configMapKeyRef:
                  key: docker.registry
                  name: jenkins-x-docker-registry
            - name: GIT_AUTHOR_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_AUTHOR_NAME
              value: jenkins-x-bot
            - name: GIT_COMMITTER_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_COMMITTER_NAME
              value: jenkins-x-bot
            - name: JENKINS_URL
              value: http://jenkins:8080
            - name: MAVEN_OPTS
              value: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
            - name: XDG_CONFIG_HOME
              value: /home/jenkins
            name: ""
            resources:
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 400m
                memory: 512Mi
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /home/jenkins
              name: workspace-volume
            - mountPath: /var/run/docker.sock
              name: docker-daemon
            - mountPath: /root/.m2/
              name: volume-0
            - mountPath: /home/jenkins/.docker
              name: volume-1
            - mountPath: /home/jenkins/.gnupg
              name: volume-2
          volumes:
          - emptyDir: {}
            name: workspace-volume
          - hostPath:
              path: /var/run/docker.sock
            name: docker-daemon
          - name: volume-0
            secret:
              secretName: jenkins-maven-settings
          - name: volume-1
            secret:
              secretName: jenkins-docker-cfg
          - name: volume-2
            secret:
              secretName: jenkins-release-gpg  
        agent:
          image: maven
        stages:
        - name: from-build-pack-build
          steps:
            - command: mvn versions:set -DnewVersion=$PREVIEW_VERSION
              dir: /workspace/source
              name: build-set-version
            - command: mvn install
              dir: /workspace/source
              name: build-mvn-install
            - command: skaffold version
              dir: /workspace/source
              name: build-skaffold-version
            - command: /kaniko/executor --cache=true --cache-dir=/workspace --context=/workspace/source
                --dockerfile=/workspace/source/Dockerfile --destination=gcr.io/sap-cpe-cloudpot-dev/cloud-s4-sdk-book:${inputs.params.version}
                --cache-repo=gcr.io/sap-cpe-cloudpot-dev/cache
              dir: /workspace/source
              image: gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
              name: build-container-build
        - name: from-build-pack-post-build
          steps:
            - command: jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:$PREVIEW_VERSION
              dir: /workspace/source
              name: postbuild-post-build
        - name: from-build-pack-promote
          steps:
            - command: make preview
              dir: /workspace/source/charts/preview
              name: promote-make-preview
            - command: jx preview --app $APP_NAME --dir ../..
              dir: /workspace/source/charts/preview
              name: promote-jx-preview
    release:
      pipeline:
        options:
          containerOptions:
            env:
            - name: DOCKER_CONFIG
              value: /home/jenkins/.docker/
            - name: DOCKER_REGISTRY
              valueFrom:
                configMapKeyRef:
                  key: docker.registry
                  name: jenkins-x-docker-registry
            - name: GIT_AUTHOR_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_AUTHOR_NAME
              value: jenkins-x-bot
            - name: GIT_COMMITTER_EMAIL
              value: jenkins-x@googlegroups.com
            - name: GIT_COMMITTER_NAME
              value: jenkins-x-bot
            - name: JENKINS_URL
              value: http://jenkins:8080
            - name: MAVEN_OPTS
              value: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
            - name: XDG_CONFIG_HOME
              value: /home/jenkins
            name: ""
            resources:
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 400m
                memory: 512Mi
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /home/jenkins
              name: workspace-volume
            - mountPath: /var/run/docker.sock
              name: docker-daemon
            - mountPath: /root/.m2/
              name: volume-0
            - mountPath: /home/jenkins/.docker
              name: volume-1
            - mountPath: /home/jenkins/.gnupg
              name: volume-2
          volumes:
          - emptyDir: {}
            name: workspace-volume
          - hostPath:
              path: /var/run/docker.sock
            name: docker-daemon
          - name: volume-0
            secret:
              secretName: jenkins-maven-settings
          - name: volume-1
            secret:
              secretName: jenkins-docker-cfg
          - name: volume-2
            secret:
              secretName: jenkins-release-gpg
        agent:
          image: maven
        stages:
        - name: from-build-pack-setup
          steps:
            - command: jx step git credentials
              dir: /workspace/source
              name: setup-jx-git-credentials
        - name: parallel-pmd-test
          parallel:
            - name: pmd-test-1
              steps:
                - name: pmd-test
                  image: rawdee/pmd
                  dir: /workspace/source
                  command: pmd -language java -d /workspace/source -f html -R /workspace/source/my-ruleset.xml -r pmd-report.html
                - name: collect-artifacts
                  image: maven
                  dir: /workspace/source
                  command: jx step stash -c reports -p "/workspace/source/*.html" --bucket-url gs://jx-eval-01-reports-06bce4e5-816e-44c8-a9f7-488be7579248
            - name: pmd-test-2
              steps:
                - name: pmd-test
                  image: rawdee/pmd
                  dir: /workspace/source
                  command: pmd -language java -d /workspace/source -f html -R /workspace/source/my-ruleset.xml -r pmd-report.html
                - name: collect-artifacts
                  image: maven
                  dir: /workspace/source
                  command: jx step stash -c reports -p "/workspace/source/*.html" --bucket-url gs://jx-eval-01-reports-06bce4e5-816e-44c8-a9f7-488be7579248
        - name: from-build-pack-build
          steps:
            - command: mvn clean deploy
              dir: /workspace/source
              name: build-mvn-deploy
            - command: skaffold version
              dir: /workspace/source
              name: build-skaffold-version
            - command: /kaniko/executor --cache=true --cache-dir=/workspace --context=/workspace/source
                --dockerfile=/workspace/source/Dockerfile --destination=gcr.io/sap-cpe-cloudpot-dev/cloud-s4-sdk-book:${inputs.params.version}
                --cache-repo=gcr.io/sap-cpe-cloudpot-dev/cache
              dir: /workspace/source
              image: gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
              name: build-container-build
            - command: jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:${VERSION}
              dir: /workspace/source
              name: build-post-build
        - name: from-build-pack-promote
          steps:
            - command: jx step changelog --version v${VERSION}
              dir: /workspace/source/charts/cloud-s4-sdk-book
              name: promote-changelog
            - command: jx step helm release
              dir: /workspace/source/charts/cloud-s4-sdk-book
              name: promote-helm-release
            - command: jx promote -b --all-auto --timeout 1h --version ${VERSION}
              dir: /workspace/source/charts/cloud-s4-sdk-book
              name: promote-jx-promote
      setVersion:
        steps:
        - image: maven
          steps:
          - comment: so we can retrieve the version in later steps
            name: next-version
            command: echo \$(jx-release-version) > VERSION
          - name: set-version
            command: mvn versions:set -DnewVersion=\$(cat VERSION)
          - name: tag-version
            command: jx step tag --version \$(cat VERSION)